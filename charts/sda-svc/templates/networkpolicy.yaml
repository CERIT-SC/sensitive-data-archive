{{- if .Values.global.networkPolicy.create }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: {{ .Release.Namespace }}
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-access
  namespace: {{ .Release.Namespace }}
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
{{- if or (or (eq "all" .Values.global.deploymentType) (eq "internal" .Values.global.deploymentType) ) (not .Values.global.deploymentType) }}
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ template "sda.fullname" . }}-allow-database
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      release: sda-svc
  policyTypes:
  - Egress
  egress:
  - to:
    {{- if .Values.global.networkPolicy.databaseNamespace }}
    - namespaceSelector:
        matchLabels:
          name: {{ .Values.global.networkPolicy.databaseNamespace }}
    {{- end }}
    - podSelector:
        matchLabels:
          cnpg.io/cluster: sda-db-cnpg
    ports:
    - protocol: TCP
      port: 5432
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ template "sda.fullname" . }}-allow-mq
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      release : sda-svc
  policyTypes:
  - Egress
  egress:
  - to:
    {{- if .Values.global.networkPolicy.brokerNamespace }}
    - namespaceSelector:
        matchLabels:
          name: {{ .Values.global.networkPolicy.brokerNamespace }}
    {{- end }}
    - podSelector:
        matchLabels:
          role: broker
    ports:
    - protocol: TCP
      port: 5671
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ template "sda.fullname" . }}-allow-s3
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      release : sda-svc
  policyTypes:
  - Egress
  egress:
  - to:
    {{- if .Values.global.networkPolicy.s3Namespace }}
    - namespaceSelector:
        matchLabels:
          name: {{ .Values.global.networkPolicy.s3Namespace }}
    {{- end }}
    - podSelector:
        matchLabels:
          app : sda-s3
    ports:
    - protocol: TCP
      port: 9000
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ template "sda.fullname" . }}-allow-https
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      release : sda-svc
  policyTypes:
  - Egress
  egress:
  - ports:
    - protocol: TCP
      port: 443
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ template "sda.fullname" . }}-auth
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app: {{ template "sda.name" . }}-auth
  policyTypes:
  - Ingress
  ingress:
  - from:
    ports:
    - protocol: TCP
      port: {{ ternary 8443 8080 .Values.global.tls.enabled }}
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ template "sda.fullname" . }}-download
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app: {{ template "sda.name" . }}-download
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    ports:
    - protocol: TCP
      port: {{ ternary 8443 8080 .Values.global.tls.enabled }}
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ template "sda.fullname" . }}-s3inbox
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app: {{ template "sda.name" . }}-inbox
  policyTypes:
  - Ingress
  ingress:
  - from:
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 8001
---
{{- end }}

{{- end }}
